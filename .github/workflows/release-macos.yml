name: Build and Release macOS .app

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: macos-latest

    env:
      APP_NAME: "MacPP"             # 你的 App 名称（用于 zip 命名）
      SCHEME: "MacPP"               # 你的 Xcode Scheme 名称
      XCODE_VERSION: "15.4"         # 可按需调整或删除本行与 setup-xcode 步骤
      CONFIGURATION: "Release"
      ARCHIVE_PATH: "build/${{ github.run_id }}.xcarchive"
      EXPORT_PATH: "build/export"
      # 注意：不要在这里用 ${{ env.APP_NAME }}，否则会触发你遇到的错误
      # ZIP_PATH 放到后面的步骤里用 $GITHUB_ENV 计算并导出

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 可选：固定 Xcode 版本，避免 runner 自动升级导致问题
      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Compute ZIP_PATH
        run: |
          set -euo pipefail
          # 在运行时用环境变量拼出 ZIP_PATH 并导出到后续步骤
          echo "ZIP_PATH=build/${GITHUB_RUN_ID}-${APP_NAME}-macOS.zip" >> "$GITHUB_ENV"

      # 如果是 .xcworkspace，请替换 -project 为 -workspace 并加 -scheme
      - name: Build archive
        run: |
          set -euo pipefail
          xcodebuild \
            -project "MacPP.xcodeproj" \
            -scheme "${SCHEME}" \
            -configuration "${CONFIGURATION}" \
            -destination 'generic/platform=macOS' \
            -archivePath "${ARCHIVE_PATH}" \
            archive

      - name: Export .app from archive
        run: |
          set -euo pipefail
          mkdir -p "${EXPORT_PATH}"
          APP_REL_PATH="$(/usr/libexec/PlistBuddy -c 'Print :ApplicationProperties:ApplicationPath' "${ARCHIVE_PATH}/Info.plist")"
          cp -R "${ARCHIVE_PATH}/Products/${APP_REL_PATH}" "${EXPORT_PATH}/${APP_NAME}.app"

      - name: Ad-hoc sign .app
        run: |
          set -euo pipefail
          /usr/bin/codesign --force --deep --sign - "${EXPORT_PATH}/${APP_NAME}.app"
          /usr/bin/codesign --verify --verbose=2 "${EXPORT_PATH}/${APP_NAME}.app"

      - name: Zip .app
        run: |
          set -euo pipefail
          ditto -c -k --sequesterRsrc --keepParent "${EXPORT_PATH}/${APP_NAME}.app" "${ZIP_PATH}"

      - name: Upload artifact (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: app-unsigned
          path: ${{ env.ZIP_PATH }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP_PATH }}
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
